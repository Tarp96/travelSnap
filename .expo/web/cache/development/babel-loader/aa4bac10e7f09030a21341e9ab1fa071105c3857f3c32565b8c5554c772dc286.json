{"ast":null,"code":"import * as React from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport PictureFeed from \"./screens/PictureFeed\";\nimport AddPictureScreen from \"./screens/AddPictureScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nvar Tab = createBottomTabNavigator();\nvar pictureFeed = \"Your Pictures\";\nvar addPhoto = \"Upload\";\nfunction Home() {\n  return _jsxs(Tab.Navigator, {\n    initialRouteName: PictureFeed,\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n            color = _ref2.color,\n            size = _ref2.size;\n          var iconName;\n          var rn = route.name;\n          if (rn === pictureFeed) {\n            iconName = focused ? \"home\" : \"home-outline\";\n          } else if (rn === addPhoto) {\n            iconName = focused ? \"list\" : \"list-outline\";\n          }\n          return _jsx(Ionicons, {\n            size: size,\n            name: iconName,\n            color: color\n          });\n        }\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      name: pictureFeed,\n      component: PictureFeed\n    }), _jsx(Tab.Screen, {\n      name: addPhoto,\n      component: AddPictureScreen\n    })]\n  });\n}\nvar MainContainer = function MainContainer() {\n  return _jsx(NavigationContainer, {\n    children: _jsx(Stack.Navigator, {\n      options: {\n        headerShown: false\n      },\n      children: _jsx(Stack.Screen, {\n        name: \"Home\",\n        component: Home,\n        options: {\n          headerShown: false\n        }\n      })\n    })\n  });\n};\nexport default MainContainer;","map":{"version":3,"names":["React","NavigationContainer","createBottomTabNavigator","Ionicons","createStackNavigator","PictureFeed","AddPictureScreen","jsx","_jsx","jsxs","_jsxs","Stack","Tab","pictureFeed","addPhoto","Home","Navigator","initialRouteName","screenOptions","_ref","route","tabBarIcon","_ref2","focused","color","size","iconName","rn","name","children","Screen","component","MainContainer","options","headerShown"],"sources":["C:/Users/tarp9/Music/New folder/travelSnap/src/navigation/MainContainer.tsx"],"sourcesContent":["import * as React from \"react\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport Ionicons from \"react-native-vector-icons/Ionicons\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\n\r\nimport PictureFeed from \"./screens/PictureFeed\";\r\nimport AddPictureScreen from \"./screens/AddPictureScreen\";\r\n\r\nconst Stack = createStackNavigator();\r\nconst Tab = createBottomTabNavigator();\r\n\r\nconst pictureFeed = \"Your Pictures\";\r\nconst addPhoto = \"Upload\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <Tab.Navigator\r\n      initialRouteName={PictureFeed}\r\n      screenOptions={({ route }) => ({\r\n        tabBarIcon: ({ focused, color, size }) => {\r\n          let iconName: String;\r\n          let rn = route.name;\r\n\r\n          if (rn === pictureFeed) {\r\n            iconName = focused ? \"home\" : \"home-outline\";\r\n          } else if (rn === addPhoto) {\r\n            iconName = focused ? \"list\" : \"list-outline\";\r\n          }\r\n\r\n          return <Ionicons size={size} name={iconName} color={color} />;\r\n        },\r\n      })}\r\n    >\r\n      <Tab.Screen name={pictureFeed} component={PictureFeed} />\r\n      <Tab.Screen name={addPhoto} component={AddPictureScreen} />\r\n    </Tab.Navigator>\r\n  );\r\n}\r\n\r\nconst MainContainer = () => {\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator options={{ headerShown: false }}>\r\n        <Stack.Screen\r\n          name=\"Home\"\r\n          component={Home}\r\n          options={{ headerShown: false }}\r\n        />\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n};\r\n\r\nexport default MainContainer;\r\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,wBAAwB,QAAQ,+BAA+B;AACxE,OAAOC,QAAQ;AACf,SAASC,oBAAoB,QAAQ,yBAAyB;AAE9D,OAAOC,WAAW;AAClB,OAAOC,gBAAgB;AAAmC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE1D,IAAMC,KAAK,GAAGP,oBAAoB,CAAC,CAAC;AACpC,IAAMQ,GAAG,GAAGV,wBAAwB,CAAC,CAAC;AAEtC,IAAMW,WAAW,GAAG,eAAe;AACnC,IAAMC,QAAQ,GAAG,QAAQ;AAEzB,SAASC,IAAIA,CAAA,EAAG;EACd,OACEL,KAAA,CAACE,GAAG,CAACI,SAAS;IACZC,gBAAgB,EAAEZ,WAAY;IAC9Ba,aAAa,EAAE,SAAAA,cAAAC,IAAA;MAAA,IAAGC,KAAK,GAAAD,IAAA,CAALC,KAAK;MAAA,OAAQ;QAC7BC,UAAU,EAAE,SAAAA,WAAAC,KAAA,EAA8B;UAAA,IAA3BC,OAAO,GAAAD,KAAA,CAAPC,OAAO;YAAEC,KAAK,GAAAF,KAAA,CAALE,KAAK;YAAEC,IAAI,GAAAH,KAAA,CAAJG,IAAI;UACjC,IAAIC,QAAgB;UACpB,IAAIC,EAAE,GAAGP,KAAK,CAACQ,IAAI;UAEnB,IAAID,EAAE,KAAKd,WAAW,EAAE;YACtBa,QAAQ,GAAGH,OAAO,GAAG,MAAM,GAAG,cAAc;UAC9C,CAAC,MAAM,IAAII,EAAE,KAAKb,QAAQ,EAAE;YAC1BY,QAAQ,GAAGH,OAAO,GAAG,MAAM,GAAG,cAAc;UAC9C;UAEA,OAAOf,IAAA,CAACL,QAAQ;YAACsB,IAAI,EAAEA,IAAK;YAACG,IAAI,EAAEF,QAAS;YAACF,KAAK,EAAEA;UAAM,CAAE,CAAC;QAC/D;MACF,CAAC;IAAA,CAAE;IAAAK,QAAA,GAEHrB,IAAA,CAACI,GAAG,CAACkB,MAAM;MAACF,IAAI,EAAEf,WAAY;MAACkB,SAAS,EAAE1B;IAAY,CAAE,CAAC,EACzDG,IAAA,CAACI,GAAG,CAACkB,MAAM;MAACF,IAAI,EAAEd,QAAS;MAACiB,SAAS,EAAEzB;IAAiB,CAAE,CAAC;EAAA,CAC9C,CAAC;AAEpB;AAEA,IAAM0B,aAAa,GAAG,SAAhBA,aAAaA,CAAA,EAAS;EAC1B,OACExB,IAAA,CAACP,mBAAmB;IAAA4B,QAAA,EAClBrB,IAAA,CAACG,KAAK,CAACK,SAAS;MAACiB,OAAO,EAAE;QAAEC,WAAW,EAAE;MAAM,CAAE;MAAAL,QAAA,EAC/CrB,IAAA,CAACG,KAAK,CAACmB,MAAM;QACXF,IAAI,EAAC,MAAM;QACXG,SAAS,EAAEhB,IAAK;QAChBkB,OAAO,EAAE;UAAEC,WAAW,EAAE;QAAM;MAAE,CACjC;IAAC,CACa;EAAC,CACC,CAAC;AAE1B,CAAC;AAED,eAAeF,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}